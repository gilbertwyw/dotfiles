# brew info zplug
export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh

zplug "plugins/brew", from:oh-my-zsh
zplug "plugins/brew-cask", from:oh-my-zsh
zplug "plugins/common-aliases", from:oh-my-zsh
zplug "plugins/git", from:oh-my-zsh

zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2

# https://github.com/sindresorhus/pure#zplug
zplug "mafredri/zsh-async"
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

zplug "desyncr/auto-ls"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
	printf "Install? [y/N]: "
	if read -q; then
		echo; zplug install
	fi
fi

# Then, source plugins and add commands to $PATH
zplug load

setopt emacs
setopt no_beep

path=(
  ~/bin
  /usr/local/bin
  /usr/local/sbin
  # `brew info coreutils`
  /usr/local/opt/coreutils/libexec/gnubin
  $path
)

typeset -U path


# `brew info chruby`
source /usr/local/opt/chruby/share/chruby/chruby.sh
source /usr/local/opt/chruby/share/chruby/auto.sh

# `brew install jenv`
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

# `brew install pyenv`
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# `brew install direnv`, https://github.com/zimbatm/direnv#zsh
eval "$(direnv hook zsh)"

# `brew info z`
. `brew --prefix`/etc/profile.d/z.sh

# aliases
[[ -f ~/.aliases ]] && source ~/.aliases

# load custom executable functions
for function in ~/.zsh/functions/*; do
  source $function
done

# iTerm
test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh

# pip install awscli
source $(pyenv which aws_zsh_completer.sh)

# generated by `/usr/local/opt/fzf/install`
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
